node{
  //def pom = readMavenPom file: 'pom.xml'
  //def version = pom.version
  //def nexus_tag = "172.31.24.222:8083/myweb:${version}"
  def mvnHome = tool name: 'maven3', type: 'maven'
  def mvn = "${mvnHome}/bin/mvn"
  stage('SCM Checkout'){
    git 'https://github.com/javahometech/my-app'
  }
  stage('Maven Build'){
    sh "${mvn} clean package"
	sh 'mv target/myweb*.war  target/myweb.war'
  }
  
  stage('Docker Build'){
   // sh "sudo yum install docker -y"
   // sh "sudo chmod 777 /var/run/docker.sock"
    sh "docker build -t krish2356/jenkins ."
  }
  
 stage('DockerHub Push'){
            steps{
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerhubPwd')]) {
                    sh "docker login -u krish2356 -p ${dockerhubPwd}"
                }
                
                sh "docker push krish2356/jenkins "
            }
        }
  
  stage('Deploy to swarm'){
	try{
	   def service =  "docker service create -d -p 90:8080 --replicas=7 --name=myweb ${nexus_tag}"
	   sshagent (credentials: ['docker-swarm-manager']) {
	   def svs = "ec2-user@13.233.223.243 ${service}"
       sh "ssh -o StrictHostKeyChecking=no  ${svs}"
      }
	}catch(e){
	   def service =  "docker service update  --image=${nexus_tag} myweb"
	   sshagent (credentials: ['docker-swarm-manager']) {
	   def svs = "ec2-user@13.233.223.243 ${service}"
       sh "ssh -o StrictHostKeyChecking=no  ${svs}"
	
		}
	}
  }
}
